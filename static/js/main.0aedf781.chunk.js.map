{"version":3,"sources":["../node_modules/svgo/lib sync","components/icons/gifsmos-v-logo.svg","components/icons/camera.svg","components/icons/preview.svg","components/icons/reset.svg","components/icons/burst.svg","components/icons/saved.svg","components/icons/settings.svg","components/icons/info.svg","components/icons/left.svg","components/icons/right.svg","../node_modules/svgo/lib lazy groupOptions: {} namespace object","reducers/images.js","constants/action-types.js","reducers/settings.js","constants/pane-types.js","reducers/ui.js","reducers/index.js","components/Header.js","lib/defaultProps.js","lib/propTypes.js","components/SidebarButton.js","components/SidebarButtonWithBadge.js","components/HelpModal.js","components/Sidebar.js","lib/calculator.js","lib/error-messages.js","lib/timer.js","actions/index.js","lib/local-storage-helpers.js","lib/calc-helpers.js","lib/input-helpers.js","lib/svgasm.js","containers/SidebarContainer.js","components/Frame.js","components/InfoIcon.js","components/ColorPicker.js","components/GenerateGifForm.js","containers/GenerateGifFormContainer.js","lib/text-preview-helper.js","components/Preview.js","containers/PreviewContainer.js","components/Burst.js","containers/BurstContainer.js","components/Settings.js","containers/SettingsContainer.js","components/Folder.js","containers/FolderContainer.js","components/ErrorToast.js","containers/ErrorToastContainer.js","constants/calculator-options.js","components/App.js","containers/AppContainer.js","lib/dev-greeting.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p","webpackEmptyAsyncContext","Promise","then","initialState","frames","frameIDs","redoFrames","gifProgress","gifData","gifText","textAlign","textBaseline","fontColor","gifFileName","images","state","arguments","length","undefined","_ref","type","payload","imageData","Object","objectSpread","defineProperty","concat","toConsumableArray","idx","newFrames","pop","deletedFrame","newFrameIDs","entries","forEach","pair","frameData","framesIDs","poppedRedoFrames","progress","text","image","width","height","interval","oversample","bounds","left","right","bottom","top","strategy","settings","panes","PREVIEW","BURST","SETTINGS","NONE","FILES","expandedPane","previewIdx","playing","error","burstSliders","ui","pane","message","indexOf","rootReducer","combineReducers","Header","react_default","a","createElement","className","src","logo","alt","imageSettingDefaults","PropTypes","number","isRequired","bool","string","func","sidebarButtonDefaults","icon","onClick","iconMap","camera","preview","reset","burst","saved","ariaMap","SidebarButton","children","expanded","toUpperCase","slice","classNames","SidebarButton-expanded","aria-label","aria-expanded","defaultProps","SidebarButtonWithBadge","showBadge","value","color","props","objectWithoutProperties","src_components_SidebarButton","HelpModal","displayClass","this","showHelpModal","toggleHelpModal","Component","Sidebar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTogglePreview","bind","assertThisInitialized","handleToggleBurst","handleToggleSettings","handleRequestFrame","handleToggleFiles","togglePane","_this$props","requestFrame","mode","targetPixelRatio","setState","_this$props2","numFrames","components_SidebarButtonWithBadge","HelpModal_HelpModal","getBurstSliders","calculator","raf","errorTimeout","notASlider","badBurstInput","errors","propText","propMap","min","max","step","badProps","prop","push","badSettingsInput","saveGraphToLocal","graph","name","savedGraphs","localStorage","getItem","JSON","parse","newGraph","timeStamp","Date","toLocaleString","setItem","stringify","getSavedGraphsList","map","_ref2","slicedToArray","date","obj","optimize","require","requestImageData","opts","reject","format","asyncScreenshot","data","getImageData","asyncToGenerator","regenerator_default","mark","_callee","svgData","parser","xmlDoc","elem","serializer","wrap","_context","prev","next","sent","DOMParser","parseFromString","documentElement","getAttribute","setAttribute","getElementsByTagName","parentNode","removeChild","XMLSerializer","serializeToString","abrupt","multipass","stop","_x","apply","setSliderByIndex","val","exp","getExpressions","getExpByIndex","noSuchExpression","match","latex","identifier","setExpression","saveCurrentGraph","_callee2","_context2","getState","_x2","_x3","_x4","loadSavedGraph","dateString","_getGraphFromLocal","getGraphFromLocal","clearTimer","cancelAnimationFrame","isPositiveInteger","isNaN","Math","round","getBurstErrors","inputs","getSettingsErrors","getSaveGraphErrors","nextFrameID","addFrame","addSavedFrame","updateGIFProgress","addGIF","updatePreviewIdx","removeItem","flashError","dispatch","clearTimeout","setError","setTimeout","generateGIF","settingsErrors","generationArgs","progressCallback","download","args","cb","output","closingTag","i","svgTagStart","svgTagStartEnd","svgTag","substr","j","svgTagEnd","replaceAll","createSVG","SidebarContainer","connect","ownProps","_settings$image","Frame","imageSrc","togglePlaying","textPosition","Frame-empty","Fragment","dangerouslySetInnerHTML","__html","style","InfoIcon","show","toggleInfo","info","tabIndex","role","aria-pressed","onKeyDown","infoText","href","target","ColorPicker","handleInputUpdate","updateTextColor","hex","lib","onChange","textColor","GenerateGifForm","showColorPicker","handleSubmit","renderColorPicker","closeColorPicker","prevProps","evt","preventDefault","handleGenerateGIF","updateText","updateGIFFileName","_evt$target$value$spl","split","_evt$target$value$spl2","updateTextPosition","updateColorPicker","currentValue","colorPicker","components_ColorPicker","colorPickerBg","backgroundColor","onSubmit","placeholder","defaultValue","disabled","GenerateGifFormContainer","textOpts","getTextPosition","Preview","handlePreviewUpdate","handleTogglePlaying","handleDeleteFrame","handleChangePreviewIdx","handleRedoFrame","handleClickContainer","stopAnimation","parseInt","multiplier","gifWidth","gifHeight","status","_this$props3","startAnimation","curPrevIdx","_this$props4","newIdx","deleteFrameAtIdx","_this$props5","redoLastFrame","lastFrame","_this2","_this$props6","Preview-expanded","InfoIcon_InfoIcon","Preview-muted","src_components_Frame","data-testid","frameID","Frame-scroll-active","key","containers_GenerateGifFormContainer","background","PreviewContainer","frameObj","fn","lastFired","now","tick","requestAnimationFrame","startTimer","Burst","isCapturing","canUndo","prevFrames","prevFrameIDs","prevCalcState","handleRequestBurst","handleUndoBurst","expressionIdx","_evt$target","_this$state","newState","parseFloat","requestBurst","imgOpts","undoData","undoBurst","_this$state2","_this$state3","Burst-expanded","Burst-input-error","replace","join","capturing","BurstContainer","imageOpts","burstErrors","sliderErrorMessage","Settings","handleStrategyUpdate","checked","updateSetting","_evt$target2","Settings-expanded","Settings-input-error","SettingsContainer","setting","Folder","prevGraphs","handleSaveCurrent","handleLoadGraph","handleDeleteSavedGraph","st","nextState","esm_extends","removeGraphFromLocal","filter","saveGraph","loadFramesFromLocal","savedList","reverse","lastIndexOf","Folder-expanded","Folder-input-error","FolderContainer","_loadSavedGraph","_ref3","_callee3","saveErrors","_context3","errorMessage","ErrorToast","aria-errormessage","ErrorToastContainer","CALCULATOR_OPTIONS","border","editOnWeb","pasteGraphLink","Desmos","window","calcContainer","React","createRef","App","handleKeyDown","onEscape","desmos","calcOptions","GraphingCalculator","current","initializeCalculator","observeEvent","addEventListener","src_components_Header","ref","containers_SettingsContainer","containers_PreviewContainer","containers_BurstContainer","containers_FolderContainer","containers_SidebarContainer","containers_ErrorToastContainer","AppContainer","_state$ui","toLowerCase","sliders","updateBurstSliders","reduce","acc","greeting","greet","console","log","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.0aedf781.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 171;","module.exports = __webpack_public_path__ + \"static/media/gifsmos-v-logo.cdb3d5e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.2edf57b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/preview.26150562.svg\";","module.exports = __webpack_public_path__ + \"static/media/reset.ebf3b7c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/burst.6d8f2435.svg\";","module.exports = __webpack_public_path__ + \"static/media/saved.50e57a4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.32c23130.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.3941b4c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.f35a3e98.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.1e9a60e1.svg\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 454;","/*\r\n * The `images` slice holds the portion of the state related to actual image\r\n * data, both from individual frames and the final generated GIF.\r\n *\r\n * frames: a map from frame ids to data URIs\r\n * frameIDs: an array of images representing the final image order\r\n * gifProgress: a value in [0, 1] representing processing progress\r\n * gifData: the data URI of the generated GIF\r\n */\r\n\r\nimport {\r\n  ADD_FRAME,\r\n  UPDATE_GIF_PROGRESS,\r\n  DELETE_FRAME_IDX,\r\n  REDO_FRAME,\r\n  ADD_GIF,\r\n  UNDO_BURST,\r\n  UPDATE_GIF_FILENAME,\r\n  UPDATE_IMAGE_SETTING,\r\n  UPDATE_BOUNDS_SETTING,\r\n  UPDATE_STRATEGY,\r\n  RESET,\r\n  UPDATE_TEXT,\r\n  UPDATE_TEXT_COLOR,\r\n  UPDATE_TEXT_POSITION\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  frames: {},\r\n  frameIDs: [],\r\n  redoFrames: [],\r\n  gifProgress: 0,\r\n  gifData: '',\r\n  gifText: '',\r\n  textAlign: 'center',\r\n  textBaseline: 'bottom',\r\n  fontColor: '#000000',\r\n  gifFileName: ''\r\n};\r\n\r\nconst images = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_FRAME: {\r\n      const { id, imageData } = payload;\r\n      const { frames, frameIDs } = state;\r\n      return {\r\n        ...state,\r\n        ...{\r\n          frames: { ...frames, [id]: imageData },\r\n          frameIDs: [...frameIDs, id],\r\n          gifProgress: 0,\r\n          gifData: '',\r\n          redoFrames: []\r\n        }\r\n      };\r\n    }\r\n\r\n    case DELETE_FRAME_IDX: {\r\n      const { idx } = payload;\r\n      const { frames, frameIDs } = state;\r\n\r\n      const newFrames = {};\r\n      frameIDs.pop();\r\n      const newFrameIDs = [...frameIDs];\r\n      let deletedFrame;\r\n\r\n      Object.entries(frames).forEach(function(pair) {\r\n        if (+pair[0] < idx) newFrames[pair[0]] = frames[pair[0]];\r\n        if (+pair[0] === idx)\r\n          deletedFrame = { id: pair[0], frameData: frames[pair[0]] };\r\n        if (+pair[0] > idx) newFrames[+pair[0] - 1] = frames[pair[0]];\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          frames: newFrames,\r\n          framesIDs: newFrameIDs,\r\n          gifProgress: 0,\r\n          gifData: '',\r\n          redoFrames: [...state.redoFrames, deletedFrame]\r\n        }\r\n      };\r\n    }\r\n\r\n    case REDO_FRAME: {\r\n      const { id, frameData } = payload;\r\n      const { frames, frameIDs, redoFrames } = state;\r\n\r\n      const newFrames = {};\r\n      const newFrameIDs = [...frameIDs, frameIDs.length + 1];\r\n      const poppedRedoFrames = [...redoFrames];\r\n      poppedRedoFrames.pop();\r\n\r\n      Object.entries(frames).forEach(function(pair) {\r\n        if (+pair[0] < id) newFrames[pair[0]] = frames[pair[0]];\r\n        if (+pair[0] >= id) newFrames[+pair[0] + 1] = frames[pair[0]];\r\n      });\r\n\r\n      newFrames[id] = frameData;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          frames: newFrames,\r\n          frameIDs: newFrameIDs,\r\n          redoFrames: poppedRedoFrames\r\n        }\r\n      };\r\n    }\r\n\r\n    case UPDATE_GIF_PROGRESS:\r\n      return {\r\n        ...state,\r\n        gifProgress: payload.progress\r\n      };\r\n\r\n    case UPDATE_GIF_FILENAME:\r\n      return {\r\n        ...state,\r\n        gifFileName: payload.gifFileName\r\n      };\r\n\r\n    case ADD_GIF:\r\n      return {\r\n        ...state,\r\n        gifData: payload.imageData\r\n      };\r\n\r\n    case UNDO_BURST:\r\n      return {\r\n        ...state,\r\n        frames: payload.frames,\r\n        frameIDs: payload.frameIDs\r\n      };\r\n\r\n    case UPDATE_IMAGE_SETTING:\r\n    case UPDATE_BOUNDS_SETTING:\r\n    case UPDATE_STRATEGY:\r\n      return {\r\n        ...state,\r\n        ...{\r\n          gifProgress: 0,\r\n          gifData: ''\r\n        }\r\n      };\r\n\r\n    case UPDATE_TEXT:\r\n      return {\r\n        ...state,\r\n        gifText: payload.text\r\n      };\r\n\r\n    case UPDATE_TEXT_COLOR:\r\n      return {\r\n        ...state,\r\n        fontColor: payload.fontColor\r\n      };\r\n\r\n    case UPDATE_TEXT_POSITION:\r\n      return {\r\n        ...state,\r\n        textAlign: payload.textAlign,\r\n        textBaseline: payload.textBaseline\r\n      };\r\n\r\n    case RESET:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default images;\r\n","/*\r\n * Action types\r\n *\r\n * Strings used for the `type` property on actions. Defining them separately is\r\n * useful so that they can be imported from reducers and action creators instead\r\n * of writing sting literals in a bunch of places. This way, typos elsewhere\r\n * lead to undefined `type`s that become quickly obvious.\r\n */\r\n\r\n// Images\r\nexport const ADD_FRAME = 'ADD_FRAME';\r\nexport const UPDATE_GIF_PROGRESS = 'UPDATE_GIF_PROGRESS';\r\nexport const ADD_GIF = 'ADD_GIF';\r\nexport const UNDO_BURST = 'UNDO_BURST';\r\nexport const REDO_FRAME = 'REDO_FRAME';\r\nexport const UPDATE_TEXT = 'UPDATE_TEXT';\r\nexport const UPDATE_TEXT_COLOR = 'UPDATE_TEXT_COLOR';\r\nexport const UPDATE_GIF_FILENAME = 'UPDATE_GIF_FILENAME';\r\nexport const UPDATE_TEXT_POSITION = 'UPDATE_TEXT_POSITION';\r\n\r\n// UI\r\nexport const UPDATE_PREVIEW_IDX = 'UPDATE_PREVIEW_IDX';\r\nexport const DELETE_FRAME_IDX = 'DELETE_FRAME_IDX';\r\nexport const TOGGLE_PANE = 'TOGGLE_PANE';\r\nexport const PLAY_PREVIEW = 'PLAY_PREVIEW';\r\nexport const PAUSE_PREVIEW = 'PAUSE_PREVIEW';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const UPDATE_BURST_SLIDERS = 'UPDATE_BURST_SLIDERS';\r\n\r\n// Settings\r\nexport const UPDATE_IMAGE_SETTING = 'UPDATE_IMAGE_SETTING';\r\nexport const UPDATE_BOUNDS_SETTING = 'UPDATE_BOUNDS_SETTING';\r\nexport const UPDATE_STRATEGY = 'UPDATE_STRATEGY';\r\n\r\nexport const RESET = 'RESET';\r\n","/*\r\n * The `settings` slice holds the user preferences for their calculator\r\n * screenshots and the generated GIF\r\n *\r\n * images: {\r\n *   width: frame width\r\n *   height: frame height\r\n *   oversample: whether to use a higher targetPixelRatio in image sampling\r\n * }\r\n *\r\n * bounds: {\r\n *   left: minimum x-value, in math coordinates\r\n *   right: maximum x-value, in math coordinates\r\n *   top: maximum y-value, in math coordinates\r\n *   bottom: minimum y-value, in math coordinates\r\n * }\r\n *\r\n * strategy: how the calculator should reconcile mismatched aspect ratios\r\n * between the math bounds and the image dimensions\r\n */\r\n\r\nimport {\r\n  UPDATE_IMAGE_SETTING,\r\n  UPDATE_BOUNDS_SETTING,\r\n  UPDATE_STRATEGY\r\n} from '../constants/action-types';\r\n\r\nconst initialState = {\r\n  image: {\r\n    width: 800,\r\n    height: 800,\r\n    interval: 30,\r\n    oversample: false\r\n  },\r\n  bounds: {\r\n    left: -10,\r\n    right: 10,\r\n    bottom: -10,\r\n    top: 10\r\n  },\r\n  strategy: 'contain'\r\n};\r\n\r\nconst settings = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_IMAGE_SETTING:\r\n      return {\r\n        ...state,\r\n        image: {\r\n          ...state.image,\r\n          ...payload\r\n        }\r\n      };\r\n\r\n    case UPDATE_BOUNDS_SETTING:\r\n      return {\r\n        ...state,\r\n        bounds: {\r\n          ...state.bounds,\r\n          ...payload\r\n        }\r\n      };\r\n\r\n    case UPDATE_STRATEGY:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n\r\n    // case RESET: intentionally omitted\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","/*\r\n * Enum for referring to panes/menus in the UI\r\n */\r\n\r\nconst panes = {\r\n  PREVIEW: 'PREVIEW',\r\n  BURST: 'BURST',\r\n  SETTINGS: 'SETTINGS',\r\n  NONE: 'NONE',\r\n  FILES: 'FILES'\r\n};\r\n\r\nexport default panes;\r\n","/*\r\n * The `ui` state slice holds data that's relevant to the user interface, but\r\n * not any images that are actually generated.\r\n *\r\n * expandedPane: the currently visible pane type\r\n * previewIdx: the index of the frame being previewed in the preview pane\r\n * playing: whether the preview is animating\r\n * error: currently displayed error message\r\n * burstSliders: expressions from the calculator that are valid sliders\r\n */\r\n\r\nimport {\r\n  TOGGLE_PANE,\r\n  UPDATE_PREVIEW_IDX,\r\n  PLAY_PREVIEW,\r\n  PAUSE_PREVIEW,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n  RESET,\r\n  UPDATE_BURST_SLIDERS\r\n} from '../constants/action-types';\r\nimport panes from '../constants/pane-types';\r\n\r\nconst initialState = {\r\n  expandedPane: panes.NONE,\r\n  previewIdx: 0,\r\n  playing: false,\r\n  error: '',\r\n  burstSliders: []\r\n};\r\n\r\nconst ui = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case TOGGLE_PANE: {\r\n      const { pane } = payload;\r\n      const { expandedPane } = state;\r\n      return {\r\n        ...state,\r\n        ...{\r\n          expandedPane: pane === expandedPane ? panes.NONE : pane,\r\n          playing: false\r\n        }\r\n      };\r\n    }\r\n\r\n    case UPDATE_PREVIEW_IDX:\r\n      return {\r\n        ...state,\r\n        previewIdx: payload.idx\r\n      };\r\n\r\n    case PLAY_PREVIEW:\r\n      return {\r\n        ...state,\r\n        playing: true\r\n      };\r\n\r\n    case PAUSE_PREVIEW:\r\n      return {\r\n        ...state,\r\n        playing: false\r\n      };\r\n\r\n    case SET_ERROR: {\r\n      let { expandedPane } = state;\r\n      const { message } = payload;\r\n      if (message.indexOf('setting') > -1) expandedPane = panes.SETTINGS;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          error: message,\r\n          expandedPane\r\n        }\r\n      };\r\n    }\r\n\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: ''\r\n      };\r\n\r\n    case RESET:\r\n      return {\r\n        ...state,\r\n        ...{\r\n          previewIdx: 0,\r\n          playing: false,\r\n          error: ''\r\n        }\r\n      };\r\n\r\n    case UPDATE_BURST_SLIDERS: {\r\n      return {\r\n        ...state,\r\n        burstSliders: payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ui;\r\n","/*\r\n * The root reducer manages changes to the application state. It's generated\r\n * automatically by merging sub-reducers that each manage a slice of the overall\r\n * state.\r\n *\r\n * Reducers are functions that have the signature (state, action) => newState.\r\n * In other words, they return the next state based on the current state and the\r\n * dispatched action they receive.\r\n *\r\n * Reducers must:\r\n * (1) be pure functions.\r\n * (2) never mutate the passed-in state.\r\n * (3) return an initial state if the passed-in state is `undefined`.\r\n * (4) return the current state for any unhandled action.\r\n */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport images from './images';\r\nimport settings from './settings';\r\nimport ui from './ui';\r\n\r\nconst rootReducer = combineReducers({\r\n  images,\r\n  settings,\r\n  ui\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport logo from './icons/gifsmos-v-logo.svg';\r\n\r\nconst Header = () => (\r\n  <div className=\"Header\">\r\n    <img className=\"Header-logo\" src={logo} alt=\"GIFsmos logo\" />\r\n    <div className=\"Header-help\">\r\n      Paste a Desmos link into the expressions list to import a saved graph.\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","export const imageSettingDefaults = {\r\n  width: 800,\r\n  height: 800,\r\n  oversample: false\r\n};\r\n\r\nexport const sidebarButtonDefaults = {\r\n  icon: 'icon',\r\n  onClick: () => {}\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const imageSettingPropTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  oversample: PropTypes.bool.isRequired\r\n};\r\n\r\nexport const sidebarButtonPropTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { sidebarButtonDefaults } from '../lib/defaultProps';\r\nimport { sidebarButtonPropTypes } from '../lib/propTypes';\r\nimport classNames from 'classnames';\r\nimport camera from './icons/camera.svg';\r\nimport preview from './icons/preview.svg';\r\nimport reset from './icons/reset.svg';\r\nimport burst from './icons/burst.svg';\r\nimport saved from './icons/saved.svg';\r\nimport settings from './icons/settings.svg';\r\nimport './SidebarButton.css';\r\n\r\nconst iconMap = {\r\n  camera,\r\n  preview,\r\n  reset,\r\n  burst,\r\n  settings,\r\n  saved\r\n};\r\n\r\nconst ariaMap = {\r\n  camera: 'capture frame',\r\n  preview: 'preview panel',\r\n  reset: 'reset images',\r\n  burst: 'multi-capture panel',\r\n  settings: 'settings panel',\r\n  saved: 'saved-graphs panel'\r\n};\r\n\r\nconst SidebarButton = ({ children, icon, onClick, expanded }) => (\r\n  <div className=\"SidebarButton-tooltip\">\r\n    <span className=\"SidebarButton-tooltiptext\">\r\n      {icon[0].toUpperCase() + icon.slice(1)}\r\n    </span>\r\n    <button\r\n      className={classNames('SidebarButton', {\r\n        'SidebarButton-expanded': expanded\r\n      })}\r\n      onClick={onClick}\r\n      aria-label={ariaMap[icon]}\r\n      aria-expanded={expanded}\r\n    >\r\n      <img src={iconMap[icon]} alt={`${icon} icon`} />\r\n      {children}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nSidebarButton.defaultProps = {\r\n  ...sidebarButtonDefaults,\r\n  expanded: false\r\n};\r\n\r\nSidebarButton.propTypes = {\r\n  ...sidebarButtonPropTypes,\r\n  expanded: PropTypes.bool\r\n};\r\n\r\nexport default SidebarButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { sidebarButtonDefaults } from '../lib/defaultProps';\r\nimport { sidebarButtonPropTypes } from '../lib/propTypes';\r\nimport classNames from 'classnames';\r\nimport SidebarButton from './SidebarButton';\r\n\r\nconst SidebarButtonWithBadge = ({ showBadge, value, color, ...props }) => (\r\n  <SidebarButton {...props}>\r\n    {showBadge && (\r\n      <div\r\n        className={classNames(\r\n          'SidebarButton-badge',\r\n          `SidebarButton-badge-${color}`\r\n        )}\r\n      >\r\n        {value}\r\n      </div>\r\n    )}\r\n  </SidebarButton>\r\n);\r\n\r\nSidebarButtonWithBadge.defaultProps = {\r\n  ...sidebarButtonDefaults,\r\n  expanded: false,\r\n  color: '',\r\n  showBadge: false,\r\n  value: 0\r\n};\r\n\r\nSidebarButtonWithBadge.propTypes = {\r\n  ...sidebarButtonPropTypes,\r\n  expanded: PropTypes.bool,\r\n  color: PropTypes.string.isRequired,\r\n  showBadge: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default SidebarButtonWithBadge;\r\n","import React, { Component } from 'react';\r\nimport './HelpModal.css';\r\n\r\nexport default class HelpModal extends Component {\r\n  render() {\r\n    let displayClass = this.props.showHelpModal ? 'show' : 'hide';\r\n\r\n    return (\r\n      <div className={`HelpModal ${displayClass}`}>\r\n        <div className=\"HelpModal-content\">\r\n          <span\r\n            onClick={this.props.toggleHelpModal}\r\n            className=\"HelpModal-close-btn\"\r\n          >\r\n            &times;\r\n          </span>\r\n          <div className=\"HelpModal-header\">\r\n            <h1>Using GIFsmos V</h1>\r\n          </div>\r\n          <div className=\"HelpModal-text\">\r\n            <h3>Creating, importing and saving graphs</h3>\r\n            <p>\r\n              Start by making something dynamic and awesome in the Desmos\r\n              graphing calculator! You can do that right inside of GIFsmos V, or\r\n              you can import one of your saved graphs from desmos.com by pasting\r\n              its URL into the expressions list in GIFsmos V, and it will be\r\n              automatically imported for you.\r\n            </p>\r\n            <p>\r\n              Conversely, if you build something great in GIFsmos V that you\r\n              want to save to your Desmos account, click \"edit graph on Desmos\"\r\n              (at the bottom of the expressions list or the graph paper), and it\r\n              will open a copy of your graph on desmos.com.\r\n            </p>\r\n            <p>\r\n              To learn more about using the graphing calculator to build cool\r\n              stuff, check out the Learn Desmos resources.\r\n            </p>\r\n            <h3>Capturing snapshots</h3>\r\n            <p>\r\n              GIFsmos V generates your animated SVG from a list of snapshots\r\n              taken from the graph paper. You can add a single frame to the list\r\n              by clicking the camera button.\r\n            </p>\r\n            <p>\r\n              GIFsmos V also has a multi-capture mode that lets you generate\r\n              multiple snapshots from a slider in the graphing calculator. Open\r\n              the multi-capture panel and enter the relevant information in the\r\n              input fields:\r\n            </p>\r\n            <h4>Option Description</h4>\r\n            <h5>Slider Index</h5> The index of the expression that contains the\r\n            slider values you want to capture.\r\n            <h5>Slider Min</h5>The first slider value to capture.\r\n            <h5>Slider Max</h5>The last slider value to capture.\r\n            <h5>Slider Step</h5>How much to increment the slider in between\r\n            captures.\r\n            <p>\r\n              Finally, click the \"Capture\" button, and GIFsmos V will\r\n              automatically capture one snapshot for each slider value defined\r\n              by the min, max, and step.\r\n            </p>\r\n            <h3>Previewing</h3>\r\n            <p>\r\n              Click the preview button to open the preview panel. You can\r\n              preview your future SVG animation either by scrubbing through the\r\n              snapshots with the slider, or by clicking the play/pause button on\r\n              the preview image. The animation will run at (roughly) a speed\r\n              determined by the \"Interval\" option in the settings panel, so it\r\n              will give you a good idea what the final SVG animation will look\r\n              like.\r\n            </p>\r\n            <h3>Adjusting image settings</h3>\r\n            <p>\r\n              Click the settings button to open the settings panel. There you\r\n              can set the desired image dimensions (applies to both the captured\r\n              snapshots and the final SVG animation), as well as the interval\r\n              between frames in the generated SVG.\r\n            </p>\r\n            <h3>Generating and downloading a SVG</h3>\r\n            <p>\r\n              Inside the preview panel, once you're happy with the results,\r\n              click the \"Download SVG\" button to generate your final image and\r\n              save it to your browser's default download location (named\r\n              `gifsmos.svg`).\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { imageSettingPropTypes } from '../lib/propTypes';\r\nimport { imageSettingDefaults } from '../lib/defaultProps';\r\nimport SidebarButton from './SidebarButton';\r\nimport SidebarButtonWithBadge from './SidebarButtonWithBadge';\r\nimport panes from '../constants/pane-types';\r\nimport './Sidebar.css';\r\nimport HelpModal from './HelpModal';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showHelpModal: false\r\n    };\r\n    this.handleTogglePreview = this.handleTogglePreview.bind(this);\r\n    this.handleToggleBurst = this.handleToggleBurst.bind(this);\r\n    this.handleToggleSettings = this.handleToggleSettings.bind(this);\r\n    this.handleRequestFrame = this.handleRequestFrame.bind(this);\r\n    this.toggleHelpModal = this.toggleHelpModal.bind(this);\r\n    this.handleToggleFiles = this.handleToggleFiles.bind(this);\r\n  }\r\n\r\n  handleTogglePreview() {\r\n    const { togglePane } = this.props;\r\n    togglePane(panes.PREVIEW);\r\n  }\r\n\r\n  handleToggleBurst() {\r\n    const { togglePane } = this.props;\r\n    togglePane(panes.BURST);\r\n  }\r\n\r\n  handleToggleSettings() {\r\n    const { togglePane } = this.props;\r\n    togglePane(panes.SETTINGS);\r\n  }\r\n\r\n  handleRequestFrame() {\r\n    const { requestFrame, width, height, oversample, strategy } = this.props;\r\n    const imageOpts = {\r\n      width,\r\n      height,\r\n      mode: strategy,\r\n      targetPixelRatio: oversample ? 2 : 1\r\n    };\r\n\r\n    requestFrame(imageOpts);\r\n  }\r\n\r\n  toggleHelpModal() {\r\n    this.setState({\r\n      showHelpModal: !this.state.showHelpModal\r\n    });\r\n  }\r\n\r\n  handleToggleFiles() {\r\n    const { togglePane } = this.props;\r\n    togglePane(panes.FILES);\r\n  }\r\n\r\n  render() {\r\n    const { reset, expandedPane, numFrames } = this.props;\r\n\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <SidebarButton icon=\"camera\" onClick={this.handleRequestFrame} />\r\n\r\n        <SidebarButton\r\n          icon=\"burst\"\r\n          expanded={expandedPane === panes.BURST}\r\n          onClick={this.handleToggleBurst}\r\n        />\r\n\r\n        <SidebarButtonWithBadge\r\n          icon=\"preview\"\r\n          expanded={expandedPane === panes.PREVIEW}\r\n          onClick={this.handleTogglePreview}\r\n          color=\"orange\"\r\n          showBadge={!!numFrames}\r\n          value={numFrames > 99 ? '99+' : numFrames}\r\n        />\r\n\r\n        <SidebarButton\r\n          icon=\"saved\"\r\n          expanded={expandedPane === panes.FILES}\r\n          onClick={this.handleToggleFiles}\r\n        />\r\n\r\n        <SidebarButton\r\n          icon=\"settings\"\r\n          expanded={expandedPane === panes.SETTINGS}\r\n          onClick={this.handleToggleSettings}\r\n        />\r\n\r\n        {!!numFrames && <SidebarButton icon=\"reset\" onClick={reset} />}\r\n\r\n        <div className=\"Sidebar-help\" onClick={this.toggleHelpModal}>\r\n          <p>Help</p>\r\n        </div>\r\n        <div>\r\n          <HelpModal\r\n            showHelpModal={this.state.showHelpModal}\r\n            toggleHelpModal={this.toggleHelpModal}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  ...imageSettingPropTypes,\r\n  numFrames: PropTypes.number.isRequired,\r\n  expandedPane: PropTypes.string.isRequired,\r\n  gifData: PropTypes.string.isRequired,\r\n  requestFrame: PropTypes.func.isRequired,\r\n  togglePane: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  numFrames: 0,\r\n  expandedPane: 'NONE',\r\n  gifData: '',\r\n  ...imageSettingDefaults,\r\n  requestFrame: () => {},\r\n  togglePane: () => {},\r\n  reset: () => {},\r\n  getBurstSliders: () => {}\r\n};\r\n\r\nexport default Sidebar;\r\n","let calculator;\r\n\r\nfunction initializeCalculator(desmos, calcContainer, calcOptions) {\r\n  calculator = desmos.GraphingCalculator(calcContainer.current, calcOptions);\r\n  return calculator;\r\n}\r\n\r\nexport { calculator, initializeCalculator };\r\n","/*\r\n * Centralized logic for returning human-radable error messages.\r\n *\r\n * As a guiding principle, error messages should refer to the input that led to\r\n * the error when possible.\r\n */\r\n\r\nexport const noSuchExpression = idx =>\r\n  `There is no expression at position ${idx}.`;\r\n\r\nexport const notASlider = idx =>\r\n  `Looks like expression ${idx} doesn't define a slider.`;\r\n\r\nexport const badNameInput = errorMessage =>\r\n  `Invalid name input for saving graph: ${errorMessage}`;\r\n\r\nexport const gifCreationProblem = () =>\r\n  'There was a problem creating your GIF. :(';\r\n\r\nexport const badBurstInput = errors => {\r\n  const propMap = {\r\n    idx: 'Slider Index',\r\n    min: 'Slider Min',\r\n    max: 'Slider Max',\r\n    step: 'Slider Step'\r\n  };\r\n\r\n  let badProps = [];\r\n  for (let prop in errors) {\r\n    if (!!errors[prop]) badProps.push(prop);\r\n  }\r\n\r\n  let propText;\r\n  switch (badProps.length) {\r\n    case 1:\r\n      propText = propMap[badProps[0]];\r\n      break;\r\n    case 2:\r\n      propText = badProps.indexOf('idx') > -1 ? propMap.idx : 'input';\r\n      break;\r\n    default:\r\n      propText = 'input';\r\n  }\r\n\r\n  if (propText === propMap.idx)\r\n    return `Please choose a slider or define an expression.`;\r\n\r\n  return `Your ${propText} isn't quite right.`;\r\n};\r\n\r\nexport const badSettingsInput = errors => {\r\n  const propMap = {\r\n    width: 'Image Width',\r\n    height: 'Image Height',\r\n    interval: 'Interval'\r\n  };\r\n\r\n  let badProps = [];\r\n  for (let prop in errors) {\r\n    if (!!errors[prop]) badProps.push(prop);\r\n  }\r\n\r\n  if (badProps.length === 1) {\r\n    let propText = propMap[badProps[0]];\r\n    return `The ${propText} setting must be a positive integer.`;\r\n  }\r\n\r\n  return 'Image settings must be positive integers.';\r\n};\r\n","// A simple replacement for `setInterval` (that fires immediately)\r\nlet raf;\r\n\r\nexport const startTimer = (fn, interval = 1000) => {\r\n  fn();\r\n  let lastFired = Date.now();\r\n  const tick = () => {\r\n    const now = Date.now();\r\n    if (now - lastFired > interval) {\r\n      fn();\r\n      lastFired = now;\r\n    }\r\n    raf = requestAnimationFrame(tick);\r\n  };\r\n  tick();\r\n};\r\n\r\nexport const clearTimer = () => {\r\n  cancelAnimationFrame(raf);\r\n};\r\n","/*\r\n * Action creators\r\n *\r\n * Actions are plain objects containing the information necessary to update the\r\n * application state held in the store. They must contain a `type` property,\r\n * and any additional data must be contained within its `payload` object.\r\n *\r\n * Action creators are simply functions that return actions. This small extra\r\n * bit of abstraction seems weird but has some benefits: primarily, action\r\n * creators can be passed to components as props so that components never need\r\n * to explicitly call `dispatch`. That makes component testing and reuse\r\n * simpler.\r\n *\r\n * By default, the store only supports synchronous data flow, but we need to\r\n * handle asynchronous updates in a few places, like fetching image data from\r\n * the calculator and generating the final GIF. There is some middleware in\r\n * place that allows us to write action creators that return a function (called\r\n * a \"thunk\") instead of an action. Thunks receive the store's `dispatch`\r\n * method as an argument and are allowed to have side effects, which gives us\r\n * the flexibility we need to make async calls to the Desmos and svgasm APIs\r\n * before updating the store.\r\n *\r\n * Because they can access the store, dispatch multiple actions, and produce\r\n * arbitrary side effects, thunks should be used with care. We should prefer\r\n * regular, synchronous action creators unless we need an asynchronous update,\r\n * which makes a thunk mandatory.\r\n */\r\n\r\nimport * as types from '../constants/action-types';\r\nimport {\r\n  setSliderByIndex,\r\n  getImageData,\r\n  getSliderExpressions,\r\n  loadSavedGraph,\r\n  saveCurrentGraph\r\n} from '../lib/calc-helpers';\r\n\r\nimport { createSVG } from '../lib/svgasm';\r\nimport { startTimer, clearTimer } from '../lib/timer';\r\n\r\nimport {\r\n  gifCreationProblem,\r\n  badBurstInput,\r\n  badSettingsInput,\r\n  badNameInput\r\n} from '../lib/error-messages';\r\n\r\nimport download from 'downloadjs';\r\n\r\nimport {\r\n  getBurstErrors,\r\n  getSettingsErrors,\r\n  getSaveGraphErrors\r\n} from '../lib/input-helpers';\r\n\r\nconst ERROR_DELAY = 3000;\r\nlet nextFrameID = 0;\r\nlet errorTimeout;\r\n\r\nexport const addFrame = imageData => ({\r\n  type: types.ADD_FRAME,\r\n  payload: {\r\n    id: ++nextFrameID,\r\n    imageData\r\n  }\r\n});\r\n\r\nexport const addSavedFrame = (imageData, id) => ({\r\n  type: types.ADD_FRAME,\r\n  payload: {\r\n    id,\r\n    imageData\r\n  }\r\n});\r\n\r\nexport const updateGIFProgress = progress => ({\r\n  type: types.UPDATE_GIF_PROGRESS,\r\n  payload: { progress }\r\n});\r\n\r\nexport const updateGIFFileName = name => {\r\n  return {\r\n    type: types.UPDATE_GIF_FILENAME,\r\n    payload: { gifFileName: name }\r\n  };\r\n};\r\n\r\nexport const updateText = text => ({\r\n  type: types.UPDATE_TEXT,\r\n  payload: { text }\r\n});\r\n\r\nexport const updateTextColor = fontColor => ({\r\n  type: types.UPDATE_TEXT_COLOR,\r\n  payload: { fontColor }\r\n});\r\n\r\nexport const updateTextPosition = textOpts => {\r\n  let { textAlign, textBaseline } = textOpts;\r\n  return {\r\n    type: types.UPDATE_TEXT_POSITION,\r\n    payload: { textAlign, textBaseline }\r\n  };\r\n};\r\n\r\nexport const addGIF = imageData => ({\r\n  type: types.ADD_GIF,\r\n  payload: { imageData }\r\n});\r\n\r\nexport const undoBurst = (frames, frameIDs) => ({\r\n  type: types.UNDO_BURST,\r\n  payload: { frames, frameIDs }\r\n});\r\n\r\nexport const togglePane = pane => {\r\n  clearTimer();\r\n  return {\r\n    type: types.TOGGLE_PANE,\r\n    payload: { pane }\r\n  };\r\n};\r\n\r\nexport const redoLastFrame = frameObj => {\r\n  const { id, frameData } = frameObj;\r\n\r\n  return {\r\n    type: types.REDO_FRAME,\r\n    payload: { id, frameData }\r\n  };\r\n};\r\n\r\nexport const updatePreviewIdx = idx => ({\r\n  type: types.UPDATE_PREVIEW_IDX,\r\n  payload: { idx }\r\n});\r\n\r\nexport const deleteFrameAtIdx = idx => ({\r\n  type: types.DELETE_FRAME_IDX,\r\n  payload: { idx }\r\n});\r\n\r\nexport const updateSetting = (setting, val) => {\r\n  let type;\r\n  const payload = { [setting]: val };\r\n\r\n  switch (setting) {\r\n    case 'width':\r\n    case 'height':\r\n    case 'interval':\r\n    case 'oversample':\r\n      type = types.UPDATE_IMAGE_SETTING;\r\n      break;\r\n\r\n    case 'left':\r\n    case 'right':\r\n    case 'top':\r\n    case 'bottom':\r\n      type = types.UPDATE_BOUNDS_SETTING;\r\n      break;\r\n\r\n    default:\r\n      type = types.UPDATE_STRATEGY;\r\n  }\r\n\r\n  return {\r\n    type,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const playPreview = () => ({ type: types.PLAY_PREVIEW });\r\n\r\nexport const stopAnimation = () => {\r\n  clearTimer();\r\n  return { type: types.PAUSE_PREVIEW };\r\n};\r\n\r\nexport const setError = message => ({\r\n  type: types.SET_ERROR,\r\n  payload: { message }\r\n});\r\n\r\nexport const clearError = () => ({ type: types.CLEAR_ERROR });\r\n\r\nexport const reset = () => {\r\n  clearTimer();\r\n  localStorage.removeItem('selectValue');\r\n  return { type: types.RESET };\r\n};\r\n\r\nconst updateBurstSliders = sliders => ({\r\n  type: types.UPDATE_BURST_SLIDERS,\r\n  payload: sliders\r\n});\r\n\r\n// Thunks\r\nexport const flashError = message => dispatch => {\r\n  clearTimeout(errorTimeout);\r\n  dispatch(setError(message));\r\n  errorTimeout = setTimeout(() => dispatch(clearError()), ERROR_DELAY);\r\n};\r\n\r\nexport const requestFrame = opts => async dispatch => {\r\n  const { width, height } = opts;\r\n\r\n  const settingsErrors = getSettingsErrors({ width, height });\r\n  if (Object.keys(settingsErrors).length) {\r\n    dispatch(flashError(badSettingsInput(settingsErrors)));\r\n    return;\r\n  }\r\n\r\n  const imageData = await getImageData(opts);\r\n  dispatch(addFrame(imageData));\r\n};\r\n\r\nexport const requestBurst = opts => async (dispatch, getState) => {\r\n  const {\r\n    idx,\r\n    min,\r\n    max,\r\n    step,\r\n    width,\r\n    height,\r\n    oversample,\r\n    frames,\r\n    frameIDs,\r\n    strategy\r\n  } = opts;\r\n  const imageOpts = {\r\n    width,\r\n    height,\r\n    mode: strategy,\r\n    targetPixelRatio: oversample ? 2 : 1\r\n  };\r\n\r\n  // Check for errors in the current pane first.\r\n  const burstErrors = getBurstErrors({ idx, min, max, step });\r\n  if (Object.keys(burstErrors).length) {\r\n    dispatch(flashError(badBurstInput(burstErrors)));\r\n    return;\r\n  }\r\n\r\n  // Then check for errors in the settings pane.\r\n  const settingsErrors = getSettingsErrors({ width, height });\r\n  if (Object.keys(settingsErrors).length) {\r\n    dispatch(flashError(badSettingsInput(settingsErrors)));\r\n    return;\r\n  }\r\n  const prevFrames = { ...frames };\r\n  const prevFrameIDs = [...frameIDs];\r\n  let imageData;\r\n  let sliderErrorMessage;\r\n  for (let val = min; val <= max; val += step) {\r\n    sliderErrorMessage = setSliderByIndex(idx, val);\r\n    if (sliderErrorMessage) {\r\n      dispatch(flashError(sliderErrorMessage));\r\n      return;\r\n    }\r\n\r\n    imageData = await getImageData(imageOpts);\r\n    dispatch(addFrame(imageData));\r\n  }\r\n\r\n  return { prevFrames, prevFrameIDs };\r\n};\r\n\r\nexport const startAnimation = () => (dispatch, getState) => {\r\n  dispatch(playPreview());\r\n  const step = () => {\r\n    const state = getState();\r\n    const frameIDs = state.images.frameIDs;\r\n    const numFrames = frameIDs.length;\r\n    const previewIdx = state.ui.previewIdx;\r\n    const nextFrameIdx = previewIdx === numFrames - 1 ? 0 : previewIdx + 1;\r\n    dispatch(updatePreviewIdx(nextFrameIdx));\r\n  };\r\n  const {\r\n    settings: {\r\n      image: { interval }\r\n    }\r\n  } = getState();\r\n  startTimer(step, interval);\r\n};\r\n\r\nexport const generateGIF = (images, opts) => (dispatch, getState) => {\r\n  // Have to check state interval and not opts because opts is in seconds\r\n  const { interval } = getState().settings.image;\r\n  const { gifFileName } = getState().images;\r\n  const settingsErrors = getSettingsErrors({ interval });\r\n  if (Object.keys(settingsErrors).length) {\r\n    dispatch(flashError(badSettingsInput(settingsErrors)));\r\n    return;\r\n  }\r\n\r\n  const generationArgs = {\r\n    images,\r\n    ...opts,\r\n    progressCallback: progress => dispatch(updateGIFProgress(progress))\r\n  };\r\n\r\n  if (images.length === 1) {\r\n    // Export normal SVG\r\n    dispatch(updateGIFProgress(1));\r\n    dispatch(addGIF(images[0]));\r\n    download(images[0], gifFileName || 'gifsmos.svg', 'image/svg');\r\n  } else {\r\n    // Export animated SVG (using svgasm)\r\n    createSVG(generationArgs, data => {\r\n      if (data.error) {\r\n        dispatch(flashError(gifCreationProblem()));\r\n      } else {\r\n        dispatch(addGIF(data.image));\r\n        download(data.image, gifFileName || 'gifsmos.svg', 'image/svg');\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBurstSliders = () => dispatch => {\r\n  const sliders = getSliderExpressions();\r\n  dispatch(updateBurstSliders(sliders));\r\n};\r\n\r\nexport const loadFramesFromLocal = dateString => (dispatch, getState) => {\r\n  dispatch(reset());\r\n  const { frameIDs, frames } = loadSavedGraph(dateString);\r\n  for (let val = 0; val < frameIDs.length; val += 1) {\r\n    // get corresponding image\r\n    const id = frameIDs[val];\r\n    const imageData = frames[id];\r\n    dispatch(addSavedFrame(imageData, id));\r\n  }\r\n};\r\n\r\nexport const saveGraph = (name, frames, frameIDs) => async dispatch => {\r\n  const saveErrors = getSaveGraphErrors(name);\r\n  if (saveErrors.name) {\r\n    dispatch(flashError(badNameInput(saveErrors.name)));\r\n    return;\r\n  }\r\n  const newGraph = await saveCurrentGraph(name, frames, frameIDs);\r\n  return newGraph;\r\n};\r\n","/**\r\n * Helper functions for loading and saving graphs to/from local storage\r\n */\r\n\r\nexport const saveGraphToLocal = (graph, name, preview, frames, frameIDs) => {\r\n  let savedGraphs = localStorage.getItem('gifsmos-saved-graphs');\r\n  savedGraphs = savedGraphs ? JSON.parse(savedGraphs) : { saved: {} };\r\n  const newGraph = {\r\n    name,\r\n    graph,\r\n    preview,\r\n    frames,\r\n    frameIDs\r\n  };\r\n  let timeStamp = new Date().toLocaleString();\r\n  savedGraphs.saved[timeStamp] = newGraph;\r\n\r\n  localStorage.setItem('gifsmos-saved-graphs', JSON.stringify(savedGraphs));\r\n  return [timeStamp, name, preview];\r\n};\r\n\r\nexport const getGraphFromLocal = dateString => {\r\n  let savedGraphs = JSON.parse(localStorage.getItem('gifsmos-saved-graphs'));\r\n  return savedGraphs.saved[dateString];\r\n};\r\n\r\nexport const getSavedGraphsList = () => {\r\n  let savedGraphs = JSON.parse(localStorage.getItem('gifsmos-saved-graphs'));\r\n\r\n  return savedGraphs\r\n    ? Object.entries(savedGraphs.saved).map(([date, obj]) => [\r\n        date,\r\n        obj.name,\r\n        obj.preview\r\n      ])\r\n    : [];\r\n};\r\n\r\nexport const removeGraphFromLocal = dateString => {\r\n  let savedGraphs = JSON.parse(localStorage.getItem('gifsmos-saved-graphs'));\r\n  delete savedGraphs.saved[dateString];\r\n  localStorage.setItem('gifsmos-saved-graphs', JSON.stringify(savedGraphs));\r\n};\r\n","/*\r\n * Calculator helpers\r\n *\r\n * We're only using a small portion of the Desmos API, and in pretty spefic\r\n * ways. Defining a few helper methods makes those call sites more descriptive\r\n * and concise.\r\n */\r\n\r\nimport { calculator } from './calculator';\r\nimport { noSuchExpression, notASlider } from './error-messages';\r\nimport { saveGraphToLocal, getGraphFromLocal } from './local-storage-helpers';\r\n\r\nconst { optimize } = require('svgo');\r\n\r\n/*\r\n * The calculator's async screenshot method takes a callback, but we'd prefer to\r\n * be able to `await` the results inside of async action creators, so wrap it up\r\n * in a promise.\r\n */\r\nconst requestImageData = opts =>\r\n  new Promise((resolve, reject) => {\r\n    opts.format = 'svg';\r\n    calculator.asyncScreenshot(opts, data => resolve(data));\r\n  });\r\n\r\nexport const getImageData = async opts => {\r\n  let svgData = await requestImageData(opts);\r\n  const parser = new DOMParser();\r\n  // Use viewBox instead of width / height\r\n  const xmlDoc = parser.parseFromString(svgData, 'image/svg+xml');\r\n  const width = xmlDoc.documentElement.getAttribute('width');\r\n  const height = xmlDoc.documentElement.getAttribute('height');\r\n  xmlDoc.documentElement.setAttribute('width', '100%');\r\n  xmlDoc.documentElement.setAttribute('height', '100%');\r\n  xmlDoc.documentElement.setAttribute('viewBox', `0 0 ${width} ${height}`);\r\n  // Remove background node\r\n  const elem = xmlDoc.getElementsByTagName('rect')[0];\r\n  elem.parentNode.removeChild(elem);\r\n  // Optimize svg output\r\n  const serializer = new XMLSerializer();\r\n  svgData = serializer.serializeToString(xmlDoc);\r\n  return optimize(svgData, { multipass: true }).data;\r\n};\r\n\r\n/*\r\n * Note that the array of expressions returned fom the Desmos API is 0-indexed,\r\n * but the numbering in the calculator UI is 1-indexed. Functions here that\r\n * accept an expression index as an argument should be 1-indexed so that users\r\n * can enter numbers that match what they're looking at in the UI.\r\n */\r\nconst getExpByIndex = idx => calculator.getExpressions()[idx - 1];\r\n\r\n/**\r\n * Returns an error message on failure.\r\n * Skips expressions that are not of type 'expression'\r\n */\r\nexport const setSliderByIndex = (idx, val) => {\r\n  const exp = getExpByIndex(idx);\r\n  if (!exp) return noSuchExpression(idx);\r\n  if (exp.type !== 'expression') return notASlider(idx);\r\n\r\n  const { id, latex } = exp;\r\n  const match = latex.match(/(.+)=/);\r\n  if (!match) return notASlider(idx);\r\n\r\n  const identifier = match[1];\r\n\r\n  calculator.setExpression({ id, latex: `${identifier}=${val}` });\r\n};\r\n\r\nexport const getSliderExpressions = () => {\r\n  return calculator.getExpressions().reduce((acc, exp, i) => {\r\n    return exp.latex &&\r\n      exp.latex !== '' &&\r\n      exp.latex.match(/[a-z]/gi).length === 1\r\n      ? [...acc, { ...exp, expressionIdx: i + 1 }]\r\n      : acc;\r\n  }, []);\r\n};\r\n\r\nexport const getCalcState = () => {\r\n  return calculator.getState();\r\n};\r\n\r\nexport const setCalcState = state => {\r\n  return calculator.setState(state);\r\n};\r\n\r\nexport const saveCurrentGraph = async (name, frames, frameIDs) => {\r\n  const graph = calculator.getState();\r\n  const preview = await getImageData({\r\n    width: 160,\r\n    height: 160,\r\n    targetPixelRatio: 0.25\r\n  });\r\n\r\n  return saveGraphToLocal(graph, name, preview, frames, frameIDs);\r\n};\r\n\r\nexport const loadSavedGraph = dateString => {\r\n  const { graph, frames, frameIDs } = getGraphFromLocal(dateString);\r\n  calculator.setState(graph);\r\n  return { frames, frameIDs };\r\n};\r\n","/*\r\n * Helpers to detect errors in user inputs.\r\n */\r\n\r\nexport const isPositiveInteger = val => {\r\n  if (isNaN(val)) return false;\r\n  if (Math.round(val) !== val) return false;\r\n  return val > 0;\r\n};\r\n\r\nexport const getBurstErrors = inputs => {\r\n  const { idx, min, max, step } = inputs;\r\n  const errors = {};\r\n\r\n  for (let prop in inputs) {\r\n    if (isNaN(inputs[prop])) errors[prop] = true;\r\n  }\r\n\r\n  if (!idx) errors.idx = true;\r\n  if (min >= max) {\r\n    errors.min = true;\r\n    errors.max = true;\r\n  }\r\n  if (step > max - min) errors.step = true;\r\n\r\n  return errors;\r\n};\r\n\r\nexport const getSettingsErrors = inputs => {\r\n  const errors = {};\r\n\r\n  for (let prop in inputs) {\r\n    if (!isPositiveInteger(inputs[prop])) errors[prop] = true;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const getBoundErrors = inputs => {\r\n  const errors = {};\r\n  const { left, right, top, bottom } = inputs;\r\n\r\n  if (left >= right) errors['leftless'] = true;\r\n  if (bottom >= top) errors['bottomless'] = true;\r\n  for (let cur in inputs) {\r\n    if (isNaN(inputs[cur])) errors[cur] = true;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const getSaveGraphErrors = name => {\r\n  const errors = {};\r\n  if (!name.length) {\r\n    errors.name = 'Name required';\r\n  } else if (name.length > 255) {\r\n    errors.name = `Name cannot be longer than 255 characters`;\r\n  }\r\n  return errors;\r\n};\r\n","/**\r\n * Minimal JavaScript implementation of https://github.com/tomkwok/svgasm\r\n * Copyright (C) 2021 Tom Kwok https://tomkwok.com/\r\n * Copyright (C) 2021 Jérémi Panneton https://jpanneton.dev/\r\n */\r\nexport const createSVG = (args, cb) => {\r\n  const images = args.images;\r\n  const animationTiming = 'linear';\r\n\r\n  let output = '';\r\n  let closingTag = '';\r\n\r\n  for (let i = 0; i < images.length; i++) {\r\n    let svgData = images[i];\r\n\r\n    // Find the first occurrence of '<svg'\r\n    const svgTagStart = svgData.indexOf('<svg');\r\n    // Find the first occurrence of '>' after '<svg'\r\n    const svgTagStartEnd = svgData.indexOf('>', svgTagStart);\r\n\r\n    if (i === 0) {\r\n      // Output opening '<svg>' tag if this file is first in the list\r\n      const svgTag = svgData.substr(0, svgTagStartEnd);\r\n      output += svgTag;\r\n\r\n      // Add 'xmlns' attribute if missing (autotrace output) to make SVG valid\r\n      if (svgTag.indexOf('xmlns') === -1) {\r\n        output += ' xmlns=\"http://www.w3.org/2000/svg\"';\r\n      }\r\n\r\n      output += '>';\r\n\r\n      // All elements are set to hidden before any element for a frame loads\r\n      // Otherwise, Chrome starts timing animation of elements as SVG loads\r\n      output += '<defs><style type=\"text/css\">';\r\n      for (let j = 0; j < images.length; j++) {\r\n        if (j > 0) {\r\n          output += ',';\r\n        }\r\n        output += `#_${j}`;\r\n      }\r\n      output += '{visibility:hidden}</style></defs>';\r\n    }\r\n\r\n    // Find the first occurrence of '</svg>' in string\r\n    const svgTagEnd = svgData.indexOf('</svg');\r\n\r\n    if (i === 0) {\r\n      // Save ending tags ('</svg>', and others if any) for output at the end\r\n      closingTag = svgData.substr(svgTagEnd);\r\n    }\r\n\r\n    // Unwrap '<svg>' tag in string and mutate string\r\n    svgData = svgData.substr(svgTagStartEnd, svgTagEnd - svgTagStartEnd);\r\n\r\n    // Add prefix to element IDs to avoid conflict since IDs are global in an SVG\r\n    // and update all links to an element with the prefixed IDs\r\n    svgData = svgData\r\n      .replaceAll(' id=\"', ` id=\"_${i}`)\r\n      .replaceAll(' href=\"#', ` href=\"#_${i}`)\r\n      .replaceAll(' xlink:href=\"#', ` xlink:href=\"#_${i}`)\r\n      .replaceAll('=\"url(#', `=\"url(#_${i}`); // Example attrs: fill, clip-path\r\n\r\n    // Output frame wrapped in a '<g>' tag for grouping\r\n    output += `<g id=\"_${i}\">${svgData}</g>`;\r\n\r\n    args.progressCallback(i / images.length);\r\n  }\r\n\r\n  // Output CSS animation definitions with no unnecessary whitespace\r\n  // Note that animation is defined after frame groups because otherwise\r\n  // heavy flickering may occur in Chrome due to animation start time mismatch\r\n  output += '<defs><style type=\"text/css\">';\r\n\r\n  for (let i = 0; i < images.length; i++) {\r\n    if (i > 0) {\r\n      output += ',';\r\n    }\r\n    output += `#_${i}`;\r\n  }\r\n  output += `{animation:${args.interval *\r\n    images.length}s ${animationTiming} _k infinite}`;\r\n\r\n  for (let i = 0; i < images.length; i++) {\r\n    output += `#_${i}{animation-delay:${args.interval * i}s}`;\r\n  }\r\n  output += '@keyframes _k{';\r\n  output += `0%,${100 / images.length}%{visibility:visible}`;\r\n  output += `${(100.0 + 0.0001 / args.interval) /\r\n    images.length}%,100%{visibility:hidden}}`;\r\n\r\n  output += '</style></defs>';\r\n  output += closingTag;\r\n\r\n  args.progressCallback(1);\r\n  return cb({ image: output });\r\n};\r\n","import { connect } from 'react-redux';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { requestFrame, togglePane, reset } from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { images, settings, ui } = state;\r\n  const { expandedPane } = ui;\r\n  const { frameIDs } = images;\r\n  const { width, height, oversample } = settings.image;\r\n  const { strategy } = settings;\r\n\r\n  return {\r\n    numFrames: frameIDs.length,\r\n    expandedPane,\r\n    width,\r\n    height,\r\n    oversample,\r\n    strategy\r\n  };\r\n};\r\n\r\nconst SidebarContainer = connect(\r\n  mapStateToProps,\r\n  {\r\n    requestFrame,\r\n    togglePane,\r\n    reset\r\n  }\r\n)(Sidebar);\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Frame.css';\r\n\r\nconst Frame = ({\r\n  imageSrc,\r\n  playing,\r\n  togglePlaying,\r\n  gifText,\r\n  fontColor,\r\n  textPosition\r\n}) => (\r\n  <div className={classNames('Frame', { 'Frame-empty': !imageSrc })}>\r\n    {imageSrc && (\r\n      <>\r\n        <div className=\"Frame-container\">\r\n          <div\r\n            className=\"Frame-image\"\r\n            dangerouslySetInnerHTML={{ __html: imageSrc }}\r\n          />\r\n          <p\r\n            className={`Frame-container-text ${textPosition}`}\r\n            style={{ color: fontColor }}\r\n          >\r\n            {gifText}\r\n          </p>\r\n        </div>\r\n        <button\r\n          className=\"Frame-animation-button\"\r\n          onClick={togglePlaying}\r\n          aria-label={\r\n            playing ? 'pause preview animation' : 'play preview animation'\r\n          }\r\n        >\r\n          {playing ? '\\u275a \\u275a' : '\\u25b6'}\r\n        </button>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nFrame.defaultProps = {\r\n  imageSrc: '',\r\n  playing: false,\r\n  togglePlaying: () => {}\r\n};\r\n\r\nFrame.propTypes = {\r\n  imageSrc: PropTypes.string.isRequired,\r\n  playing: PropTypes.bool.isRequired,\r\n  togglePlaying: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Frame;\r\n","import React, { Component } from 'react';\r\nimport info from './icons/info.svg';\r\nimport './InfoIcon.css';\r\n\r\nexport default class InfoIcon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n    this.toggleInfo = this.toggleInfo.bind(this);\r\n  }\r\n\r\n  toggleInfo() {\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const displayClass = this.state.show ? 'show' : 'hide';\r\n    return (\r\n      <div className=\"InfoIcon-text-container\">\r\n        <img\r\n          src={info}\r\n          alt=\"info icon\"\r\n          className=\"InfoIcon-icon\"\r\n          onClick={this.toggleInfo}\r\n          tabIndex=\"0\"\r\n          role=\"button\"\r\n          aria-pressed={this.state.show}\r\n          onKeyDown={this.toggleInfo}\r\n        />\r\n        <div className={`InfoIcon-text ${displayClass}`}>\r\n          <p>{this.props.infoText}</p>\r\n          <a href=\"https://github.com/jpanneton/gifsmos-v\" target=\"blank\">\r\n            More Info\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nclass ColorPicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleInputUpdate = this.handleInputUpdate.bind(this);\r\n  }\r\n\r\n  handleInputUpdate(color) {\r\n    this.props.updateTextColor(color.hex);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SketchPicker\r\n          className=\"ColorPicker-SketchPicker\"\r\n          onChange={this.handleInputUpdate}\r\n          color={this.props.textColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { Component } from 'react';\r\nimport './GenerateGifForm.css';\r\nimport ColorPicker from './ColorPicker';\r\n\r\nclass GenerateGifForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showColorPicker: this.props.showColorPicker\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputUpdate = this.handleInputUpdate.bind(this);\r\n    this.renderColorPicker = this.renderColorPicker.bind(this);\r\n    this.closeColorPicker = this.closeColorPicker.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.showColorPicker !== prevProps.showColorPicker) {\r\n      this.setState({ showColorPicker: this.props.showColorPicker });\r\n    }\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.handleGenerateGIF();\r\n  }\r\n\r\n  handleInputUpdate(evt) {\r\n    switch (evt.target.name) {\r\n      case 'gifText':\r\n        this.props.updateText(evt.target.value);\r\n        break;\r\n      case 'fontColor':\r\n        this.props.updateTextColor(evt.target.value);\r\n        break;\r\n\r\n      case 'name':\r\n        this.props.updateGIFFileName(evt.target.value);\r\n        break;\r\n\r\n      case 'placement':\r\n        const [textBaseline, textAlign] = evt.target.value.split('-');\r\n        this.props.updateTextPosition({ textAlign, textBaseline });\r\n        localStorage.setItem('selectValue', evt.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  renderColorPicker() {\r\n    this.setState({ showColorPicker: !this.state.showColorPicker });\r\n    this.props.updateColorPicker(!this.state.showColorPicker);\r\n  }\r\n\r\n  closeColorPicker() {\r\n    this.setState({ showColorPicker: false });\r\n  }\r\n\r\n  render() {\r\n    let currentValue = localStorage.getItem('selectValue') || 'DEFAULT';\r\n    let colorPicker = (\r\n      <ColorPicker\r\n        updateTextColor={this.props.updateTextColor}\r\n        textColor={this.props.fontColor}\r\n        closeColorPicker={this.closeColorPicker}\r\n        showColorPicker={this.state.showColorPicker}\r\n      />\r\n    );\r\n\r\n    let colorPickerBg = { backgroundColor: this.props.fontColor };\r\n    return (\r\n      <form className=\"GenerateGifForm-form\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"GenerateGifForm-input\"\r\n          name=\"name\"\r\n          aria-label=\"add a file name\"\r\n          placeholder=\"Add a File Name\"\r\n          onChange={this.handleInputUpdate}\r\n          value={this.props.gifFileName}\r\n        />\r\n        <input\r\n          className=\"GenerateGifForm-input disabled-feature\"\r\n          name=\"gifText\"\r\n          aria-label=\"add GIF text\"\r\n          placeholder=\"Add GIF Text\"\r\n          onChange={this.handleInputUpdate}\r\n          value={this.props.gifText}\r\n        />\r\n        <select\r\n          type=\"select\"\r\n          id=\"GenerateGifForm-select\"\r\n          name=\"placement\"\r\n          className=\"GenerateGifForm-select disabled-feature\"\r\n          aria-label=\"GIF text position\"\r\n          onChange={this.handleInputUpdate}\r\n          defaultValue={currentValue}\r\n        >\r\n          <option disabled value=\"DEFAULT\">\r\n            Select GIF Text Position\r\n          </option>\r\n          <option value=\"top-left\">Top Left</option>\r\n          <option value=\"top-center\">Top Center</option>\r\n          <option value=\"top-right\"> Top Right</option>\r\n          <option value=\"bottom-left\">Bottom Left</option>\r\n          <option value=\"bottom-center\">Bottom Center</option>\r\n          <option value=\"bottom-right\">Bottom Right</option>\r\n        </select>\r\n        <div\r\n          style={colorPickerBg}\r\n          onClick={this.renderColorPicker}\r\n          onKeyDown={this.renderColorPicker}\r\n          className=\"ColorPicker disabled-feature\"\r\n          aria-label=\"pick GIF text color\"\r\n          role=\"button\"\r\n          aria-pressed={this.state.showColorPicker}\r\n          tabIndex=\"0\"\r\n        >\r\n          <p>Pick GIF Text Color</p>\r\n        </div>\r\n        {this.state.showColorPicker ? colorPicker : null}\r\n        <button\r\n          className=\"GenerateGifForm-button\"\r\n          aria-label=\"generate gif\"\r\n          type=\"submit\"\r\n        >\r\n          Download SVG\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateGifForm;\r\n","import { connect } from 'react-redux';\r\nimport GenerateGifForm from '../components/GenerateGifForm';\r\nimport {\r\n  updateGIFFileName,\r\n  updateText,\r\n  updateTextColor,\r\n  generateGIF,\r\n  updateTextPosition\r\n} from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { images } = state;\r\n  const { gifText, fontColor, gifFileName, textAlign, textBaseline } = images;\r\n\r\n  return {\r\n    handleGenerateGIF: ownProps.handleGenerateGIF,\r\n    gifText,\r\n    fontColor,\r\n    gifFileName,\r\n    textAlign,\r\n    textBaseline\r\n  };\r\n};\r\n\r\nconst GenerateGifFormContainer = connect(\r\n  mapStateToProps,\r\n  {\r\n    updateText,\r\n    updateTextColor,\r\n    updateGIFFileName,\r\n    generateGIF,\r\n    updateTextPosition\r\n  }\r\n)(GenerateGifForm);\r\n\r\nexport default GenerateGifFormContainer;\r\n","//Create a classname for the text preview position while previewing the position of text on a GIF before download.\r\nconst getTextPosition = (textAlign, textBaseline) => {\r\n  return `${textBaseline}-${textAlign}`;\r\n};\r\n\r\nexport default getTextPosition;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Frame from './Frame';\r\nimport InfoIcon from './InfoIcon';\r\nimport GenerateGifFormContainer from '../containers/GenerateGifFormContainer';\r\nimport './Preview.css';\r\nimport left from './icons/left.svg';\r\nimport right from './icons/right.svg';\r\nimport getTextPosition from '../lib/text-preview-helper';\r\n\r\nclass Preview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showColorPicker: false\r\n    };\r\n\r\n    this.handleGenerateGIF = this.handleGenerateGIF.bind(this);\r\n    this.handlePreviewUpdate = this.handlePreviewUpdate.bind(this);\r\n    this.handleTogglePlaying = this.handleTogglePlaying.bind(this);\r\n    this.handleDeleteFrame = this.handleDeleteFrame.bind(this);\r\n    this.handleChangePreviewIdx = this.handleChangePreviewIdx.bind(this);\r\n    this.handleRedoFrame = this.handleRedoFrame.bind(this);\r\n    this.handleClickContainer = this.handleClickContainer.bind(this);\r\n    this.updateColorPicker = this.updateColorPicker.bind(this);\r\n  }\r\n\r\n  handlePreviewUpdate(evt) {\r\n    const { updatePreviewIdx, stopAnimation } = this.props;\r\n    const idx = parseInt(evt.target.value, 10);\r\n    stopAnimation();\r\n    updatePreviewIdx(idx);\r\n  }\r\n\r\n  handleGenerateGIF() {\r\n    const {\r\n      frames,\r\n      frameIDs,\r\n      width,\r\n      height,\r\n      oversample,\r\n      interval,\r\n      generateGIF,\r\n      gifText,\r\n      fontColor,\r\n      textAlign,\r\n      textBaseline\r\n    } = this.props;\r\n\r\n    const images = frameIDs.map(id => frames[id]);\r\n    const multiplier = oversample ? 2 : 1;\r\n    const opts = {\r\n      gifWidth: width * multiplier,\r\n      gifHeight: height * multiplier,\r\n      interval: interval / 1000,\r\n      text: gifText,\r\n      fontColor: fontColor,\r\n      textAlign: textAlign,\r\n      textBaseline: textBaseline\r\n    };\r\n    generateGIF(images, opts);\r\n  }\r\n\r\n  updateColorPicker(status) {\r\n    this.setState({ showColorPicker: status });\r\n  }\r\n\r\n  handleClickContainer(evt) {\r\n    if (evt.target.className === 'Preview Preview-expanded') {\r\n      this.setState({\r\n        showColorPicker: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTogglePlaying() {\r\n    const { playing, startAnimation, stopAnimation } = this.props;\r\n    if (playing) {\r\n      stopAnimation();\r\n    } else {\r\n      startAnimation();\r\n    }\r\n  }\r\n\r\n  handleDeleteFrame(curPrevIdx) {\r\n    const { frameIDs, updatePreviewIdx, deleteFrameAtIdx } = this.props;\r\n\r\n    const newIdx = curPrevIdx - 1 < 0 ? 0 : curPrevIdx - 1;\r\n    deleteFrameAtIdx(frameIDs[curPrevIdx]);\r\n    updatePreviewIdx(newIdx);\r\n  }\r\n\r\n  handleChangePreviewIdx(newIdx) {\r\n    const { updatePreviewIdx } = this.props;\r\n    updatePreviewIdx(newIdx);\r\n  }\r\n\r\n  handleRedoFrame() {\r\n    const { redoFrames, redoLastFrame } = this.props;\r\n\r\n    const lastFrame = redoFrames[redoFrames.length - 1];\r\n    const id = lastFrame.id;\r\n    const frameData = lastFrame.frameData;\r\n\r\n    redoLastFrame({ id, frameData });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      expanded,\r\n      previewIdx,\r\n      frames,\r\n      frameIDs,\r\n      gifProgress,\r\n      playing,\r\n      redoFrames,\r\n      gifText,\r\n      fontColor,\r\n      textAlign,\r\n      textBaseline\r\n    } = this.props;\r\n\r\n    const numFrames = frameIDs.length;\r\n    const imageSrc = frames[frameIDs[previewIdx]];\r\n\r\n    let textPosition = getTextPosition(textAlign, textBaseline);\r\n\r\n    if (!expanded) return <div className=\"Preview\" />;\r\n\r\n    const previewText = `Preview allows you to preview your future GIF by \r\n                         scrubbing through snapshots with the slider or \r\n                         previewing your GIF with the play/pause button.`;\r\n\r\n    return (\r\n      <div\r\n        className={classNames('Preview', { 'Preview-expanded': expanded })}\r\n        onClick={this.handleClickContainer}\r\n      >\r\n        <div className=\"Preview-header\">\r\n          <h2>Preview</h2>\r\n          <InfoIcon infoText={previewText} />\r\n        </div>\r\n        <div className={classNames({ 'Preview-muted': !numFrames })}>\r\n          <div className=\"Frame-section-container\">\r\n            <img\r\n              className=\"Frame-directional-icon\"\r\n              src={left}\r\n              onClick={() =>\r\n                this.handleChangePreviewIdx(Math.max(previewIdx - 1, 0))\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <Frame\r\n              imageSrc={imageSrc}\r\n              playing={playing}\r\n              togglePlaying={this.handleTogglePlaying}\r\n              gifText={gifText}\r\n              fontColor={fontColor}\r\n              textPosition={textPosition}\r\n            />\r\n            <img\r\n              className=\"Frame-directional-icon\"\r\n              src={right}\r\n              onClick={() =>\r\n                this.handleChangePreviewIdx(\r\n                  Math.min(previewIdx + 1, frameIDs.length - 1)\r\n                )\r\n              }\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"Preview-scrubber\" data-testid=\"Preview-scrubber\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={numFrames - 1}\r\n              value={previewIdx}\r\n              onChange={this.handlePreviewUpdate}\r\n              disabled={!numFrames}\r\n              aria-label=\"preview frame index\"\r\n            />\r\n            <div\r\n              className=\"Preview-scrubber-counter\"\r\n              data-testid=\"Preview-scrubber-counter\"\r\n            >\r\n              {numFrames ? `${previewIdx + 1} / ${numFrames}` : '0 / 0'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Frame-delete\">\r\n          {numFrames ? (\r\n            <button\r\n              className=\"Frame-delete-redo-button\"\r\n              aria-label=\"delete this frame\"\r\n              onClick={() => this.handleDeleteFrame(previewIdx)}\r\n            >\r\n              Delete this Frame\r\n            </button>\r\n          ) : null}\r\n          {redoFrames.length ? (\r\n            <button\r\n              className=\"Frame-delete-redo-button\"\r\n              aria-label=\"redo last frame\"\r\n              onClick={this.handleRedoFrame}\r\n            >\r\n              Undo Delete\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"Frame-timeline\">\r\n          {frameIDs.map((frameID, i) => (\r\n            <div\r\n              className={classNames('Frame-scroll', {\r\n                'Frame-scroll-active': previewIdx === i\r\n              })}\r\n              onClick={() => this.handleChangePreviewIdx(i)}\r\n              key={`frame-id-${frameID}`}\r\n              dangerouslySetInnerHTML={{ __html: frames[frameID] }}\r\n            />\r\n          ))}\r\n        </div>\r\n        {!numFrames ? (\r\n          <div className=\"Preview-no-frames\">\r\n            No frames have been captured. Use the camera or burst tools to add\r\n            some!\r\n          </div>\r\n        ) : null}\r\n        <div className=\"Preview-create\">\r\n          {!!numFrames && this.props.gifData.length === 0 ? (\r\n            <GenerateGifFormContainer\r\n              handleGenerateGIF={this.handleGenerateGIF}\r\n              showColorPicker={this.state.showColorPicker}\r\n              updateColorPicker={this.updateColorPicker}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"Preview-progress-outer\">\r\n          <div\r\n            className=\"Preview-progress-inner\"\r\n            style={{\r\n              width: `${100 * gifProgress}%`,\r\n              background: gifProgress === 1 ? '#2ecc40' : '#1869FF'\r\n            }}\r\n          />\r\n        </div>\r\n        {gifProgress === 1 ? (\r\n          <div className=\"Preview-progress-success\">Download Successful </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPreview.defaultProps = {\r\n  expanded: false,\r\n  previewIdx: 0,\r\n  playing: false,\r\n  frames: {},\r\n  frameIDs: [],\r\n  gifData: '',\r\n  gifProgress: 0,\r\n  width: 800,\r\n  height: 800,\r\n  oversample: false,\r\n  interval: 30,\r\n  redoFrames: [],\r\n  updatePreviewIdx: () => {},\r\n  generateGIF: () => {},\r\n  startAnimation: () => {},\r\n  stopAnimation: () => {}\r\n};\r\n\r\nPreview.propTypes = {\r\n  expanded: PropTypes.bool.isRequired,\r\n  previewIdx: PropTypes.number.isRequired,\r\n  playing: PropTypes.bool.isRequired,\r\n  frames: PropTypes.object.isRequired,\r\n  frameIDs: PropTypes.array.isRequired,\r\n  gifData: PropTypes.string.isRequired,\r\n  gifProgress: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  oversample: PropTypes.bool.isRequired,\r\n  interval: PropTypes.number.isRequired,\r\n  redoFrames: PropTypes.array.isRequired,\r\n  updatePreviewIdx: PropTypes.func.isRequired,\r\n  generateGIF: PropTypes.func.isRequired,\r\n  startAnimation: PropTypes.func.isRequired,\r\n  stopAnimation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Preview;\r\n","import { connect } from 'react-redux';\r\nimport Preview from '../components/Preview';\r\nimport {\r\n  generateGIF,\r\n  updatePreviewIdx,\r\n  startAnimation,\r\n  stopAnimation,\r\n  deleteFrameAtIdx,\r\n  redoLastFrame\r\n} from '../actions';\r\nimport panes from '../constants/pane-types';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { images, ui, settings } = state;\r\n  const { expandedPane, previewIdx, playing } = ui;\r\n  const {\r\n    frames,\r\n    frameIDs,\r\n    gifProgress,\r\n    gifData,\r\n    gifText,\r\n    fontColor,\r\n    redoFrames,\r\n    textAlign,\r\n    textBaseline\r\n  } = images;\r\n  const { width, height, oversample, interval } = settings.image;\r\n\r\n  return {\r\n    expanded: expandedPane === panes.PREVIEW,\r\n    previewIdx,\r\n    playing,\r\n    frames,\r\n    frameIDs,\r\n    gifProgress,\r\n    gifData,\r\n    width,\r\n    height,\r\n    oversample,\r\n    interval,\r\n    redoFrames,\r\n    gifText,\r\n    fontColor,\r\n    textAlign,\r\n    textBaseline\r\n  };\r\n};\r\n\r\nconst PreviewContainer = connect(\r\n  mapStateToProps,\r\n  {\r\n    updatePreviewIdx,\r\n    deleteFrameAtIdx,\r\n    generateGIF,\r\n    redoLastFrame,\r\n    startAnimation,\r\n    stopAnimation\r\n  }\r\n)(Preview);\r\n\r\nexport default PreviewContainer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getCalcState, setCalcState } from '../lib/calc-helpers';\r\nimport { imageSettingPropTypes } from '../lib/propTypes';\r\nimport { imageSettingDefaults } from '../lib/defaultProps';\r\nimport { getBurstErrors } from '../lib/input-helpers';\r\nimport './Burst.css';\r\nimport InfoIcon from './InfoIcon';\r\n\r\nclass Burst extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idx: null,\r\n      min: -10,\r\n      max: 10,\r\n      step: 1,\r\n      isCapturing: false,\r\n      canUndo: false,\r\n      prevFrames: {},\r\n      prevFrameIDs: [],\r\n      prevCalcState: {},\r\n      errors: {}\r\n    };\r\n    this.handleInputUpdate = this.handleInputUpdate.bind(this);\r\n    this.handleRequestBurst = this.handleRequestBurst.bind(this);\r\n    this.handleUndoBurst = this.handleUndoBurst.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.frameIDs.length !== prevProps.frameIDs.length) {\r\n      this.setState({ canUndo: false });\r\n    }\r\n    if (this.props.burstSliders.length && prevProps.burstSliders.length === 0) {\r\n      this.setState({ idx: this.props.burstSliders[0].expressionIdx });\r\n    }\r\n  }\r\n\r\n  handleInputUpdate(evt) {\r\n    const {\r\n      target: { name, value }\r\n    } = evt;\r\n    const { errors, ...newState } = this.state;\r\n    const val = name === 'idx' ? parseInt(value, 10) : parseFloat(value);\r\n\r\n    newState[name] = val;\r\n    newState.errors = getBurstErrors(newState);\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  async handleRequestBurst() {\r\n    this.setState({ isCapturing: true, canUndo: false });\r\n    const { requestBurst, expanded, frames, frameIDs, ...imgOpts } = this.props;\r\n    const prevCalcState = getCalcState();\r\n    const undoData = await requestBurst({\r\n      ...this.state,\r\n      ...imgOpts,\r\n      frames,\r\n      frameIDs\r\n    });\r\n    if (undoData) {\r\n      const { prevFrames, prevFrameIDs } = undoData;\r\n      this.setState({\r\n        isCapturing: false,\r\n        canUndo: true,\r\n        prevFrames,\r\n        prevFrameIDs,\r\n        prevCalcState\r\n      });\r\n    } else {\r\n      this.setState({ isCapturing: false });\r\n    }\r\n  }\r\n\r\n  handleUndoBurst() {\r\n    const { undoBurst } = this.props;\r\n    const { prevFrames, prevFrameIDs, prevCalcState } = this.state;\r\n    undoBurst(prevFrames, prevFrameIDs);\r\n    setCalcState(prevCalcState);\r\n    this.setState({\r\n      canUndo: false,\r\n      prevFrames: {},\r\n      prevFrameIDs: [],\r\n      prevCalcState: {}\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { idx, min, max, step, errors } = this.state;\r\n    const { expanded, burstSliders } = this.props;\r\n    const burstInfo = `Burst allows you to generate multiple snapshots\r\n      of your graph at one time. Enter the relevant info in the input fields\r\n      and hit capture to watch the magic happen.`;\r\n\r\n    if (!expanded) return <div className=\"Burst\" />;\r\n\r\n    return (\r\n      <div className={classNames('Burst', { 'Burst-expanded': expanded })}>\r\n        <div className=\"Burst-header\">\r\n          <h2>Burst</h2>\r\n          <InfoIcon infoText={burstInfo} />\r\n        </div>\r\n        <div className=\"Burst-options-container\">\r\n          <div className=\"Burst-dropdown-container\">\r\n            <div data-testid=\"Burst-slider-index-label\">Slider</div>\r\n            <select\r\n              className={classNames('Burst-dropdown', {\r\n                'Burst-input-error': !!errors.idx\r\n              })}\r\n              name=\"idx\"\r\n              aria-label=\"slider index\"\r\n              value={idx ? idx : undefined}\r\n              onChange={this.handleInputUpdate}\r\n            >\r\n              {!burstSliders.length ? (\r\n                <option value={undefined}>No Sliders</option>\r\n              ) : null}\r\n              {burstSliders.map(exp => {\r\n                return (\r\n                  <option\r\n                    key={`slider-${exp.id}`}\r\n                    value={exp.expressionIdx}\r\n                    defaultValue={idx === exp.expressionIdx}\r\n                  >\r\n                    {exp.latex\r\n                      .replace(/\\\\/g, '')\r\n                      .split('=')\r\n                      .join(' = ')}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div data-testid=\"Burst-slider-min-label\">Slider Min</div>\r\n          <input\r\n            className={classNames('Burst-input', {\r\n              'Burst-input-error': !!errors.min\r\n            })}\r\n            type=\"number\"\r\n            name=\"min\"\r\n            aria-label=\"slider minimum\"\r\n            value={isNaN(min) ? '' : min}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n          <div data-testid=\"Burst-slider-max-label\">Slider Max</div>\r\n          <input\r\n            className={classNames('Burst-input', {\r\n              'Burst-input-error': !!errors.max\r\n            })}\r\n            type=\"number\"\r\n            name=\"max\"\r\n            aria-label=\"slider maximum\"\r\n            value={isNaN(max) ? '' : max}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n          <div data-testid=\"Burst-slider-step-label\">Slider Step</div>\r\n          <input\r\n            className={classNames('Burst-input', {\r\n              'Burst-input-error': !!errors.step\r\n            })}\r\n            type=\"number\"\r\n            name=\"step\"\r\n            aria-label=\"slider step\"\r\n            value={isNaN(step) ? '' : step}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n          <div>\r\n            <button\r\n              className={classNames('Burst-button', {\r\n                capturing: this.state.isCapturing\r\n              })}\r\n              onClick={this.handleRequestBurst}\r\n              aria-label=\"capture several frames\"\r\n            >\r\n              {this.state.isCapturing ? 'Capturing...' : 'Capture'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.canUndo ? (\r\n          <div>\r\n            <button\r\n              className=\"Burst-button\"\r\n              onClick={this.handleUndoBurst}\r\n              aria-label=\"undo last burst\"\r\n            >\r\n              Undo\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBurst.defaultProps = {\r\n  ...imageSettingDefaults,\r\n  expanded: false,\r\n  requestBurst: () => {},\r\n  burstSliders: [],\r\n  frameIDs: []\r\n};\r\n\r\nBurst.propTypes = {\r\n  ...imageSettingPropTypes,\r\n  expanded: PropTypes.bool.isRequired,\r\n  requestBurst: PropTypes.func.isRequired,\r\n  burstSliders: PropTypes.array.isRequired,\r\n  frameIDs: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Burst;\r\n","import { connect } from 'react-redux';\r\nimport Burst from '../components/Burst';\r\nimport { requestBurst, undoBurst } from '../actions';\r\nimport panes from '../constants/pane-types';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { settings, ui, images } = state;\r\n  const { width, height, oversample } = settings.image;\r\n  const { frames, frameIDs } = images;\r\n  const { strategy } = settings;\r\n\r\n  return {\r\n    expanded: ui.expandedPane === panes.BURST,\r\n    width,\r\n    height,\r\n    oversample,\r\n    burstSliders: ui.burstSliders,\r\n    frames,\r\n    frameIDs,\r\n    strategy\r\n  };\r\n};\r\n\r\nconst BurstContainer = connect(\r\n  mapStateToProps,\r\n  { requestBurst, undoBurst }\r\n)(Burst);\r\n\r\nexport default BurstContainer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { imageSettingPropTypes } from '../lib/propTypes';\r\nimport { imageSettingDefaults } from '../lib/defaultProps';\r\nimport classNames from 'classnames';\r\nimport { isPositiveInteger } from '../lib/input-helpers';\r\nimport './Settings.css';\r\nimport InfoIcon from './InfoIcon';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleInputUpdate = this.handleInputUpdate.bind(this);\r\n    this.handleStrategyUpdate = this.handleStrategyUpdate.bind(this);\r\n  }\r\n\r\n  handleInputUpdate(evt) {\r\n    const {\r\n      target: { name, value, checked }\r\n    } = evt;\r\n\r\n    const { updateSetting } = this.props;\r\n    const val = name === 'oversample' ? checked : parseInt(value, 10);\r\n    updateSetting(name, val);\r\n  }\r\n\r\n  handleStrategyUpdate(evt) {\r\n    const {\r\n      target: { name, value }\r\n    } = evt;\r\n    const { updateSetting } = this.props;\r\n    updateSetting(name, value);\r\n  }\r\n\r\n  render() {\r\n    const { expanded, width, height, oversample, interval } = this.props;\r\n\r\n    if (!expanded) return <div className=\"Settings\" />;\r\n\r\n    const settingsText = `The settings panel allows you to set your desired image dimensions \r\n                          as well as the interval between frames in the generated GIF.`;\r\n    return (\r\n      <div\r\n        className={classNames('Settings', { 'Settings-expanded': expanded })}\r\n      >\r\n        <div className=\"Settings-header\">\r\n          <h2>Settings</h2>\r\n          <InfoIcon infoText={settingsText} />\r\n        </div>\r\n\r\n        <div className=\"Settings-options-container\">\r\n          <div>Image Width</div>\r\n          <input\r\n            className={classNames('Settings-input', {\r\n              'Settings-input-error': !isPositiveInteger(width)\r\n            })}\r\n            type=\"number\"\r\n            name=\"width\"\r\n            aria-label=\"image width\"\r\n            value={isNaN(width) ? '' : width}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n\r\n          <div>Image Height</div>\r\n          <input\r\n            className={classNames('Settings-input', {\r\n              'Settings-input-error': !isPositiveInteger(height)\r\n            })}\r\n            type=\"number\"\r\n            name=\"height\"\r\n            aria-label=\"image height\"\r\n            value={isNaN(height) ? '' : height}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n\r\n          <div>Interval (ms)</div>\r\n          <input\r\n            className={classNames('Settings-input', {\r\n              'Settings-input-error': !isPositiveInteger(interval)\r\n            })}\r\n            type=\"number\"\r\n            name=\"interval\"\r\n            aria-label=\"frame interval\"\r\n            value={isNaN(interval) ? '' : interval}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n\r\n          <div>Strategy</div>\r\n          <select\r\n            className=\"Settings-dropdown\"\r\n            name=\"strategy\"\r\n            aria-label=\"strategy\"\r\n            onChange={this.handleStrategyUpdate}\r\n          >\r\n            <option value=\"contain\" defaultValue>\r\n              Contain\r\n            </option>\r\n            <option value=\"stretch\">Stretch</option>\r\n            <option value=\"preserveX\">PreserveX</option>\r\n            <option value=\"preserveY\">PreserveY</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"disabled-feature\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"oversample\"\r\n            aria-label=\"oversample image\"\r\n            checked={oversample}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n          <span>Oversample</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSettings.defaultProps = {\r\n  expanded: false,\r\n  ...imageSettingDefaults,\r\n  interval: 30,\r\n  updateSetting: () => {}\r\n};\r\n\r\nSettings.propTypes = {\r\n  expanded: PropTypes.bool.isRequired,\r\n  ...imageSettingPropTypes,\r\n  interval: PropTypes.number.isRequired,\r\n  updateSetting: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Settings;\r\n","import { connect } from 'react-redux';\r\nimport Settings from '../components/Settings';\r\nimport { updateSetting } from '../actions';\r\nimport panes from '../constants/pane-types';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { settings, ui } = state;\r\n  const { width, height, interval, oversample } = settings.image;\r\n  const { strategy } = settings;\r\n\r\n  return {\r\n    expanded: ui.expandedPane === panes.SETTINGS,\r\n    width,\r\n    height,\r\n    oversample,\r\n    interval,\r\n    strategy\r\n  };\r\n};\r\n\r\nconst SettingsContainer = connect(\r\n  mapStateToProps,\r\n  { updateSetting }\r\n)(Settings);\r\n\r\nexport default SettingsContainer;\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  getSavedGraphsList,\r\n  removeGraphFromLocal\r\n} from '../lib/local-storage-helpers';\r\nimport panes from '../constants/pane-types';\r\nimport './Folder.css';\r\nimport InfoIcon from './InfoIcon';\r\n\r\nclass Folder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      prevGraphs: getSavedGraphsList(),\r\n      errors: {}\r\n    };\r\n\r\n    this.handleInputUpdate = this.handleInputUpdate.bind(this);\r\n    this.handleSaveCurrent = this.handleSaveCurrent.bind(this);\r\n    this.handleLoadGraph = this.handleLoadGraph.bind(this);\r\n    this.handleDeleteSavedGraph = this.handleDeleteSavedGraph.bind(this);\r\n  }\r\n\r\n  handleInputUpdate(evt) {\r\n    const { name, value } = evt.target;\r\n\r\n    this.setState(st => {\r\n      const { ...nextState } = st;\r\n      nextState[name] = value;\r\n      return nextState;\r\n    });\r\n  }\r\n\r\n  handleDeleteSavedGraph(date) {\r\n    removeGraphFromLocal(date);\r\n    this.setState(st => ({\r\n      prevGraphs: st.prevGraphs.filter(graph => graph[0] !== date)\r\n    }));\r\n  }\r\n\r\n  async handleSaveCurrent() {\r\n    const { name } = this.state;\r\n    const { togglePane, saveGraph } = this.props;\r\n    const { frames, frameIDs } = this.props.images;\r\n    const { errors, ...newState } = this.state;\r\n    let newGraph = await saveGraph(name, frames, frameIDs);\r\n\r\n    if (newGraph) {\r\n      newState.name = '';\r\n      newState.prevGraphs = [...newState.prevGraphs, newGraph];\r\n      togglePane(panes.FILES);\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleLoadGraph(date) {\r\n    const { togglePane, loadFramesFromLocal } = this.props;\r\n    loadFramesFromLocal(date);\r\n    togglePane(panes.FILES);\r\n  }\r\n\r\n  render() {\r\n    const { name, errors, prevGraphs } = this.state;\r\n    const { expanded } = this.props;\r\n\r\n    if (!expanded) return <div className=\"Folder\" />;\r\n\r\n    const savedList = prevGraphs.length ? (\r\n      <ul className=\"Folder-saved-list\">\r\n        {prevGraphs.reverse().map(function([date, name, preview]) {\r\n          return (\r\n            <div className=\"Folder-saved-item\" key={`${date}-${name}`}>\r\n              <div\r\n                className=\"Folder-saved-graph\"\r\n                onClick={() => this.handleLoadGraph(date)}\r\n              >\r\n                <div\r\n                  className=\"Folder-item-preview\"\r\n                  dangerouslySetInnerHTML={{ __html: preview }}\r\n                />\r\n                <div className=\"Folder-item-text\">\r\n                  <div className=\"Folder-name-text\">{name}</div>\r\n                  <div className=\"Folder-small-text\">\r\n                    created on: {date.slice(0, date.lastIndexOf(' '))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                aria-label=\"delete\"\r\n                onClick={() => this.handleDeleteSavedGraph(date)}\r\n                className=\"Folder-button Folder-delete-graph\"\r\n              >\r\n                <div className=\"Folder-delete-text\">+</div>\r\n              </button>\r\n            </div>\r\n          );\r\n        }, this)}\r\n      </ul>\r\n    ) : (\r\n      <div className=\"Folder-small-text Folder-previous-items\">\r\n        <em>No Saved Graphs</em>\r\n      </div>\r\n    );\r\n\r\n    const folderText = `The folder allows you to save your graphs so you \r\n                          can come back to them at a later time.`;\r\n\r\n    return (\r\n      <div\r\n        className={classNames('Folder', {\r\n          'Folder-expanded': expanded\r\n        })}\r\n      >\r\n        <div className=\"Folder-header\">\r\n          <h2>Folder</h2>\r\n          <InfoIcon infoText={folderText} />\r\n        </div>\r\n        <div>\r\n          <div className=\"Folder-titles\">Name</div>\r\n          <input\r\n            className={classNames('Folder-input', {\r\n              'Folder-input-error': !!errors.name\r\n            })}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Graph name\"\r\n            aria-label=\"graph name\"\r\n            value={name}\r\n            onChange={this.handleInputUpdate}\r\n          />\r\n          <div>\r\n            <button\r\n              className=\"Folder-button Folder-save\"\r\n              onClick={this.handleSaveCurrent}\r\n              aria-label=\"Save this graph\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Folder-titles\">Saved Graphs</div>\r\n        <div className=\"Folder-previous-items\">{savedList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Folder;\r\n","import { connect } from 'react-redux';\r\nimport Folder from '../components/Folder';\r\nimport { togglePane, loadFramesFromLocal, saveGraph } from '../actions';\r\nimport panes from '../constants/pane-types';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, images } = state;\r\n\r\n  return {\r\n    expanded: ui.expandedPane === panes.FILES,\r\n    images\r\n  };\r\n};\r\n\r\nconst FolderContainer = connect(\r\n  mapStateToProps,\r\n  { togglePane, loadFramesFromLocal, saveGraph }\r\n)(Folder);\r\n\r\nexport default FolderContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ErrorToast.css';\r\n\r\nconst ErrorToast = ({ message }) => {\r\n  if (!message.length) return null;\r\n  return (\r\n    <div className=\"ErrorToast\" role=\"alert\" aria-errormessage={message}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorToast.defaultProps = {\r\n  message: ''\r\n};\r\n\r\nErrorToast.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ErrorToast;\r\n","import { connect } from 'react-redux';\r\nimport ErrorToast from '../components/ErrorToast';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  message: state.ui.error\r\n});\r\n\r\nconst ErrorToastContainer = connect(mapStateToProps)(ErrorToast);\r\n\r\nexport default ErrorToastContainer;\r\n","/*\r\n * Configuration options for the Desmos API. This object is passed to the\r\n * GraphingCalculator constructor once its container element mounts.\r\n *\r\n * editOnWeb: Enable exporting a graph to desmos.com so a user with a Desmos\r\n * account can save it there.\r\n *\r\n * pasteGraphLink: Enable importing a graph from desmos.com by pasting a saved\r\n * graph's URL into the expressions list in the calculator.\r\n *\r\n * See https://www.desmos.com/api for complete documentation.\r\n */\r\n\r\nconst CALCULATOR_OPTIONS = {\r\n  border: false,\r\n  editOnWeb: true,\r\n  pasteGraphLink: true\r\n};\r\n\r\nexport default CALCULATOR_OPTIONS;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../components/Header';\r\nimport SidebarContainer from '../containers/SidebarContainer';\r\nimport PreviewContainer from '../containers/PreviewContainer';\r\nimport BurstContainer from '../containers/BurstContainer';\r\nimport SettingsContainer from '../containers/SettingsContainer';\r\nimport FolderContainer from '../containers/FolderContainer';\r\nimport ErrorToastContainer from '../containers/ErrorToastContainer';\r\nimport CALCULATOR_OPTIONS from '../constants/calculator-options';\r\nimport { initializeCalculator } from '../lib/calculator';\r\nimport './App.css';\r\n\r\n// The Desmos API is loaded in index.html\r\nconst Desmos = window.Desmos;\r\nconst calcContainer = React.createRef();\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  handleKeyDown({ key }) {\r\n    const { onEscape } = this.props;\r\n    if (key === 'Escape') onEscape();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getBurstSliders } = this.props;\r\n    const calculator = initializeCalculator(\r\n      Desmos,\r\n      calcContainer,\r\n      CALCULATOR_OPTIONS\r\n    );\r\n    calculator.observeEvent('change', getBurstSliders);\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    const { pane } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className={`calculator calculator-${pane}`} ref={calcContainer} />\r\n        <SettingsContainer />\r\n        <PreviewContainer />\r\n        <BurstContainer />\r\n        <FolderContainer />\r\n        <SidebarContainer />\r\n        <ErrorToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  onEscape: () => {}\r\n};\r\n\r\nApp.propTypes = {\r\n  onEscape: PropTypes.func.isRequired\r\n};\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from '../components/App';\r\nimport { getBurstSliders } from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { expandedPane, burstSliders } = state.ui;\r\n\r\n  return {\r\n    pane: expandedPane.toLowerCase(),\r\n    burstSliders: burstSliders\r\n  };\r\n};\r\n\r\nconst AppContainer = connect(\r\n  mapStateToProps,\r\n  { getBurstSliders }\r\n)(App);\r\n\r\nexport default AppContainer;\r\n","const wave = '\\ud83d\\udc4b';\r\n\r\nexport const greeting = `\r\n${wave} Hey, there!\r\nIf you're interested in working on GIFsmos, please visit\r\nhttps://github.com/desmosinc/gifsmos.`;\r\n\r\nconst greet = () => {\r\n  console.log(greeting);\r\n};\r\n\r\nexport default greet;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport AppContainer from './containers/AppContainer';\r\nimport panes from './constants/pane-types';\r\nimport { togglePane } from './actions';\r\nimport greet from './lib/dev-greeting';\r\nimport './index.css';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nconst closePane = () => store.dispatch(togglePane(panes.NONE));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer onEscape={closePane} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// Say hello to the nice people with their consoles open.\r\ngreet();\r\n"],"sourceRoot":""}